package Controller;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.reflect.TypeToken;

import DAL.ProductDAL;
import DAL.ProductTypeDAL;
import DAL.SearchDAL;
import Helper.ErrorMesage;
import Helper.Extra;
import Helper.responseUtf8;
import Model.ItemModel;
import Model.Product.ProductData;
import Model.ProductType;


@Controller
@RequestMapping(value = "SearchController")
public class SearchController {
	@RequestMapping(value = "get_search_key", method = RequestMethod.GET)
	@ResponseBody
	public void get_search_key(

	HttpServletResponse response) throws IOException, ClassNotFoundException,
			InstantiationException, SQLException {
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String str = "";
		str = SearchDAL.get_product();
		List<String> list = Arrays.asList(str.split(","));
		//System.out.println("so luong: " + list.size());
		str = SearchDAL.get_search_key();
		responseUtf8.response_Utf8(response, str);
	}

	public void get_product_for_men(

	HttpServletResponse response) throws IOException, ClassNotFoundException,
			InstantiationException, SQLException {
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String str = "";
		str = SearchDAL.get_product();
		List<String> list = Arrays.asList(str.split(","));
		//System.out.println("so luong: " + list.size());
		str = SearchDAL.get_search_key();
		responseUtf8.response_Utf8(response, str);
	}
	@RequestMapping(value="get_product_by_profile",method=RequestMethod.GET)
	@ResponseBody
	public void get_product_by_profile(
			@RequestParam("gender") String gender,
			@RequestParam("from_old") String from_old,
			@RequestParam("to_old") String to_old,
	HttpServletResponse response) throws IOException, ClassNotFoundException,
			InstantiationException, SQLException {
		//System.out.println("get_product_by_profile");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String json = "";
		String str1,str2;
		str1= SearchDAL.get_product_by_gender("1");
		//System.out.println(str1);
		str2 = SearchDAL.get_product_by_old("","");
		//System.out.println(str2);
		json =  str1.replace("]", str2.replace("[", "")) ;
		//System.out.println(json);
		
		
		responseUtf8.response_Utf8(response, json);
	}
	@RequestMapping(value="get_product_by_profile1",method=RequestMethod.GET)
	@ResponseBody
	public void get_product_by_profile1(
			@RequestParam("gender") String gender,
			@RequestParam("from_old") String from_old,
			@RequestParam("to_old") String to_old,
	HttpServletResponse response) throws IOException, ClassNotFoundException,
			InstantiationException, SQLException {
		//System.out.println("get_product_by_profile");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String json = "";
		ArrayList<ProductData> list1,list2;
		list1= SearchDAL.get_product_by_gender1("1");

		list2 = SearchDAL.get_product_by_old1("","");
		list1.addAll(list2);

		 ;
		//System.out.println(list1.size());

		Set<ProductData> hs = new HashSet<>();
		hs.addAll(list1);
		list1.clear();
		list1.addAll(hs);
		//System.out.println(list1.size());
		json =  new Gson().toJson(list1);
		//ArrayList<ProductData> a =  SearchDAL.get_favourite_product_in_date("1","");
		//System.out.println("123");
		responseUtf8.response_Utf8(response, json);
	}
	
	@RequestMapping(value="get_favourite_product_in_day",method=RequestMethod.GET)
	@ResponseBody
	public void get_favourite_product_in_day(
			HttpServletResponse response) throws IOException, ClassNotFoundException,
			InstantiationException, SQLException {
		//System.out.println("get_favourite_product_in_day");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String json = "";
		ArrayList<ProductData> list;
		json = SearchDAL.get_favourite_product_in_date("2","");
		//System.out.println(json);
		responseUtf8.response_Utf8(response, json);
	}
	@RequestMapping(value="get_favourite_product_in_month",method=RequestMethod.GET)
	@ResponseBody
	public void get_favourite_product_in_month(
			HttpServletResponse response) throws IOException, ClassNotFoundException,
			InstantiationException, SQLException {
		//System.out.println("get_favourite_product_in_month");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String json = "";
		ArrayList<ProductData> list;
		json = SearchDAL.get_favourite_product_in_date("2","");
		responseUtf8.response_Utf8(response, json);
	}
	@RequestMapping(value="get_favourite_product_in_year",method=RequestMethod.GET)
	@ResponseBody
	public void get_favourite_product_in_year(
			HttpServletResponse response) throws IOException, ClassNotFoundException,
			InstantiationException, SQLException {
		//System.out.println("get_favourite_product_in_year");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String json = "";
		ArrayList<ProductData> list;
		json = SearchDAL.get_favourite_product_in_date("3","");
		responseUtf8.response_Utf8(response, json);
	}

}

package Controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.json.JSONException;
import org.json.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.reflect.TypeToken;

import DAL.ProductDAL;
import DAL.ShoppingCartDAL;
import Helper.JsonHelper;
import Helper.responseUtf8;
import Model.ShoppingCartItem;

@Controller
@RequestMapping(value="ShoppingCartController")
public class ShoppingCartController {
	@RequestMapping(value="save_item_shopping_cart",method=RequestMethod.GET)
	@ResponseBody
	public void save_item_shopping_cart(
			@RequestParam("product_id") String product_id,
			@RequestParam("urlhref") String urlhref,
			HttpServletRequest request, 
			HttpServletResponse response
	) throws IOException, ClassNotFoundException, InstantiationException, SQLException{
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");	
		HttpSession session = request.getSession();
		// if null => create new
		if(session.getAttribute("cart")==null)
		{
			ArrayList<ShoppingCartItem> list = new ArrayList<ShoppingCartItem>();
			session.setAttribute("cart",list);
		}
		//
		ArrayList<ShoppingCartItem> listcart = (ArrayList<ShoppingCartItem>)session.getAttribute("cart");		
		if(product_id!=null && product_id!="")
		{
			//add
			if(!ShoppingCartItem.CheckProductExists(listcart,product_id))
			{
				ShoppingCartItem item = new ShoppingCartItem();
				try {
					item = ProductDAL.getProductByIDReturnCartItem(product_id);
				} catch (ClassNotFoundException | InstantiationException
						| SQLException e) {					
					e.printStackTrace();
				}				
				listcart.add(item);	
				//save log
				ShoppingCartDAL.save_item_shoppingcart(item);
			}
			// update
			else 
			{
				ShoppingCartItem.UpdateShoppingCart(listcart,product_id,1);
			}
		}		
		session.setAttribute("cart",listcart);		
		response.setContentType("text/html;charset=UTF-8");
		PrintWriter out = response.getWriter();		
		out.print("<script>window.location.href='"+urlhref+"'</script>");
	}
	@RequestMapping(value="get_shopping_cart",method=RequestMethod.GET)
	@ResponseBody
	public void get_shopping_cart(			
			HttpServletRequest request, 
			HttpServletResponse response
	) throws IOException{
		HttpSession session = request.getSession();
		ArrayList<ShoppingCartItem> list = new ArrayList<ShoppingCartItem>();
		if(session.getAttribute("cart")!=null)
		{
			list = (ArrayList<ShoppingCartItem>)session.getAttribute("cart");
		}
		
		Gson gson = new Gson();
		JsonElement element = gson.toJsonTree(list, new TypeToken<ArrayList<ShoppingCartItem>>() {}.getType());	
		JsonArray jsonArray = element.getAsJsonArray();	
		responseUtf8.response_Utf8(response,jsonArray.toString());
	}
	@RequestMapping(value="update_shopping_cart",method=RequestMethod.GET)
	@ResponseBody
	public void update_shopping_cart(	
			@RequestParam("product_id") String product_id,
			@RequestParam("product_quantity") String product_quantity,
			HttpServletRequest request, 
			HttpServletResponse response
	) throws IOException, JSONException{
		//System.out.println("AA");
		int result = -1;
		try{
			HttpSession session = request.getSession();	
			// if null => create new
			if(session.getAttribute("cart")==null)
			{
				ArrayList<ShoppingCartItem> list = new ArrayList<ShoppingCartItem>();
				session.setAttribute("cart",list);
			}
			// default: check = 0 => success		
			ArrayList<ShoppingCartItem> listcart = (ArrayList<ShoppingCartItem>)session.getAttribute("cart");
			product_quantity = request.getParameter("product_quantity");
			ShoppingCartItem.UpdateShoppingCart_in_knock_out(listcart,product_id,Integer.parseInt(product_quantity));
			session.setAttribute("cart", listcart);	
			result =0;
			
		}catch(Exception ex){
			ex.printStackTrace();
			result =-1;
		}
			
		JSONObject obj = new JSONObject();
		obj.put("result",String.valueOf(result));		
		String strresult = JsonHelper.ConvetJSONObjectToJson(obj);
		//System.out.println(strresult);
		responseUtf8.response_Utf8(response, strresult);
	}
	@RequestMapping(value="remove_shopping_cart",method=RequestMethod.GET)
	@ResponseBody
	public void remove_shopping_cart(	
			@RequestParam("product_id") String product_id,
			HttpServletRequest request, 
			HttpServletResponse response
	) throws IOException, JSONException{
		int result = -1;
		try{
			HttpSession session = request.getSession();	
			// if null => create new
			if(session.getAttribute("cart")==null)
			{
				ArrayList<ShoppingCartItem> list = new ArrayList<ShoppingCartItem>();
				session.setAttribute("cart",list);
			}
			// default: check = 0 => success		
			ArrayList<ShoppingCartItem> listcart = (ArrayList<ShoppingCartItem>)session.getAttribute("cart");
			ShoppingCartItem.RemoveItemOnShoppingCart(listcart,product_id);
			session.setAttribute("cart", listcart);
			result =0;
		}
		catch(Exception ex){
			result = -1;
		}
		
		JSONObject obj = new JSONObject();
		obj.put("result",String.valueOf(result));		
		String strresult = JsonHelper.ConvetJSONObjectToJson(obj);
		responseUtf8.response_Utf8(response, strresult);
	}
	@RequestMapping(value="add_shopping_cart",method=RequestMethod.GET)
	@ResponseBody
	public void add_shopping_cart(	
			@RequestParam("product_id") String product_id,
			@RequestParam("product_quantity") String product_quantity,
			HttpServletRequest request, 
			HttpServletResponse response
	) throws IOException, ClassNotFoundException, InstantiationException, SQLException{
		HttpSession session = request.getSession();	
		// if null => create new
		if(session.getAttribute("cart")==null)
		{
			ArrayList<ShoppingCartItem> list = new ArrayList<ShoppingCartItem>();
			session.setAttribute("cart",list);
		}
		// default: check = 0 => success		
		ArrayList<ShoppingCartItem> listcart = (ArrayList<ShoppingCartItem>)session.getAttribute("cart");
		//System.out.println(product_id);
		if(!ShoppingCartItem.CheckProductExists(listcart,product_id))
		{
			
			ShoppingCartItem item = new ShoppingCartItem();
			item = ProductDAL.getProductByIDReturnCartItem(product_id);
			listcart.add(item);
			//save log
			ShoppingCartDAL.save_item_shoppingcart(item);
			session.setAttribute("cart", listcart);
			
		}
		else 
		{			
			ShoppingCartItem.UpdateShoppingCart(listcart,product_id,Integer.parseInt(product_quantity));
			session.setAttribute("cart", listcart);
		}	
		PrintWriter out = response.getWriter();
		out.print("1");
	}
	@RequestMapping(value="get_short_shopping_cart",method=RequestMethod.GET)
	@ResponseBody
	public void get_short_shopping_cart(	
			
			HttpServletRequest request, 
			HttpServletResponse response
	) throws IOException, ClassNotFoundException, InstantiationException, SQLException, JSONException{
		HttpSession session = request.getSession();	
		// if null => create new
		if(session.getAttribute("cart")==null)
		{
			ArrayList<ShoppingCartItem> list = new ArrayList<ShoppingCartItem>();
			session.setAttribute("cart",list);
		}
		ArrayList<ShoppingCartItem> listcart = (ArrayList<ShoppingCartItem>)session.getAttribute("cart");
		JSONObject obj = new JSONObject();
		obj.put("count_product", listcart.size());
		obj.put("total_amount", ShoppingCartItem.get_total_amount(listcart));
		String result = JsonHelper.ConvetJSONObjectToJson(obj);
		responseUtf8.response_Utf8(response, result);
	}
	
	@RequestMapping(value="get_count_product_shopping_cart",method=RequestMethod.GET)
	@ResponseBody
	public void get_count_product_shopping_cart(			
			HttpServletRequest request, 
			HttpServletResponse response
	) throws IOException, JSONException{
		HttpSession session = request.getSession();
		ArrayList<ShoppingCartItem> list = new ArrayList<ShoppingCartItem>();
		if(session.getAttribute("cart")!=null)
		{
			list = (ArrayList<ShoppingCartItem>)session.getAttribute("cart");
		}		
		int num = list.size();
		JSONObject obj = new JSONObject();
		obj.put("result",String.valueOf(num));		
		String strresult = JsonHelper.ConvetJSONObjectToJson(obj);
		//System.out.println(strresult);
		responseUtf8.response_Utf8(response, strresult);
	}
}
